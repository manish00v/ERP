// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SupplierMaster {
  customerMasterID  String @id @default(uuid())
  supplierTypeCode  String
  customerFunction  String
  lifeCycleStatus   String
  bankAccountType   String
  paymentTerms      String
  freight           String
}

// Business entity model - represents the top-level organizational unit
model BusinessEntity {
  id                  Int      @id @default(autoincrement())  // Auto-incrementing ID
  businessEntityCode  String   @unique @db.VarChar(4)  // Unique business code
  businessEntityName  String   @db.VarChar(30)
  street1             String   @db.VarChar(50)
  street2             String?  @db.VarChar(50)  // Optional field
  city                String   @db.VarChar(30)
  state               String   @db.VarChar(30)
  region              String?  @db.VarChar(50)
  country             String   @db.VarChar(30)
  pinCode             String   @db.VarChar(6)
  businessUnitCode    String?  @db.VarChar(4) 
  factoryUnitCode     String?  @db.VarChar(4) 
  createdAt           DateTime @default(now())  // Auto-set creation timestamp
  updatedAt           DateTime @updatedAt  // Auto-updated timestamp

  // Relations to child units
  businessUnits BusinessUnit[]  // One-to-many with BusinessUnit
  factoryUnits  FactoryUnit[]   // One-to-many with FactoryUnit

  @@map("business_entities")
}

model BusinessUnit {
  id                  Int       @id @default(autoincrement())
  businessUnitCode    String    @unique @db.VarChar(4)
  businessUnitDesc    String    @db.VarChar(30)
  street1             String    @db.VarChar(50)
  street2             String?   @db.VarChar(50)
  city                String    @db.VarChar(30)
  state               String    @db.VarChar(30)
  region              String?   @db.VarChar(50)
  country             String    @db.VarChar(30)
  pinCode             String    @db.VarChar(6)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  // Foreign keys
  businessEntityCode  String?   @db.VarChar(4)
  salesChannelId      String?   @db.VarChar(4)
  salesOfficeCode     String?   @db.VarChar(4)

  // Correct relations
  businessEntity      BusinessEntity? @relation(fields: [businessEntityCode], references: [businessEntityCode])
  salesChannel        SalesChannel?   @relation(fields: [salesChannelId], references: [salesChannelId])
  salesOffice         SalesOffice?    @relation(fields: [salesOfficeCode], references: [salesOfficeCode])

  @@map("business_units")
}

model FactoryUnit {
  id                  Int       @id @default(autoincrement())
  factoryUnitCode     String    @unique @db.VarChar(4)
  factoryUnitName     String    @db.VarChar(30)
  street1             String    @db.VarChar(50)
  street2             String?   @db.VarChar(50)
  city                String    @db.VarChar(30)
  state               String    @db.VarChar(30)
  region              String?   @db.VarChar(50)
  country             String    @db.VarChar(30)
  pinCode             String    @db.VarChar(6)
  language            Language  @default(EN)
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt

  InventoryBayId       String ?      @db.VarChar(4)
  InventoryUnitId   String ?         @db.VarChar(4)
  sourcingUnitId   String?           @db.VarChar(4)
  sourcingTeamId   String?           @db.VarChar(4)

  // Foreign keys
  businessEntityCode  String? @db.VarChar(4)  // Required relation to BusinessEntity
  deliveryLocationCode String? @db.VarChar(4)  // Optional relation to DeliveryLocation

  // Relation fields
  businessEntity    BusinessEntity? @relation(fields: [businessEntityCode], references: [businessEntityCode])
  deliveryLocation  DeliveryLocation? @relation(fields: [deliveryLocationCode], references: [deliveryLocationCode])

  @@map("factory_units")
}

model SalesOffice {
  id                  Int      @id @default(autoincrement())
  salesOfficeCode     String   @unique @db.VarChar(4)
  salesOfficeDesc     String   @db.VarChar(30)
  street1             String   @db.VarChar(50)
  street2             String?  @db.VarChar(50)
  city                String   @db.VarChar(30)
  state               String   @db.VarChar(30)
  region              String?  @db.VarChar(50)
  country             String   @db.VarChar(30)
  pinCode             String   @db.VarChar(6)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Relations
  businessUnits       BusinessUnit[]

  @@map("sales_offices")
}

model DeliveryLocation {
  id                  Int      @id @default(autoincrement())
  deliveryLocationCode String   @unique @db.VarChar(4)
  deliveryLocationName String   @db.VarChar(30)
  street1             String   @db.VarChar(50)
  street2             String?  @db.VarChar(50)
  city                String   @db.VarChar(30)
  state               String   @db.VarChar(30)
  region              String?  @db.VarChar(50)
  country             String   @db.VarChar(30)
  pinCode             String   @db.VarChar(6)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  // Relations
  factoryUnits        FactoryUnit[]

  @@map("delivery_locations")
}

model SalesChannel {
  id               Int      @id @default(autoincrement())
  salesChannelId   String   @unique @db.VarChar(4)
  salesChannelName String   @db.VarChar(30)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  // Relations
  businessUnits    BusinessUnit[]

  @@map("sales_channels")
}

model SalesTeam {
  id             Int      @id @default(autoincrement())
  salesTeamCode  String   @unique @db.VarChar(4)
  salesTeamName  String   @db.VarChar(30)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@map("sales_teams")
}

model SalesPerson {
  id                   Int      @id @default(autoincrement())
  SalesPersonId        String   @unique @db.VarChar(4)
  SalesPersonName      String   @db.VarChar(30) 
  street1              String   @db.VarChar(50)
  street2              String?  @db.VarChar(50)
  city                 String   @db.VarChar(30)
  state                String   @db.VarChar(30)
  region               String   @db.VarChar(50)
  country              String   @db.VarChar(30)
  pinCode              String   @db.VarChar(6) 
  phoneNumber          String   @db.VarChar(10) 
  mobileNumber         String   @db.VarChar(10) 
  email                String   @db.VarChar(20)
  department           String
  salesPersonRole      String   
  createdAt            DateTime @default(now()) 
  updatedAt            DateTime @updatedAt

  @@map("sales_persons")
}

model SourcingPerson {
  sourcingPersonId     String   @id @map("id")
  sourcingPersonName   String   @db.VarChar(30)
  sourcingPersonRole   String   
  street1             String   @db.VarChar(50)
  street2             String?  @db.VarChar(50)
  city                String   @db.VarChar(30)
  state               String   @db.VarChar(30)
  region              String   @db.VarChar(50)
  country             String   @db.VarChar(30)
  pinCode             String   @db.VarChar(6)
  phoneNumber         String   @db.VarChar(10)
  mobileNumber        String   @db.VarChar(10)
  email               String   @db.VarChar(20)
  department          String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  @@map("sourcing_persons")
}

enum Language {
  EN  // English
  ES  // Spanish
  FR  // French
  DE  // German
  IT  // Italian
  NL  // Dutch
  ID  // Indonesian
  VI  // Vietnamese
}