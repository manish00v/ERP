generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model InventoryUnit {
  id                String         @id @default(uuid())
  InventoryUnitId   String         @unique @db.VarChar(4)
  InventoryUnitName String         @db.VarChar(30)
  InventoryControl  String         @db.VarChar(30)
  StreetAddress     String         @db.VarChar(50)
  City              String         @db.VarChar(30)
  Region            String         @db.VarChar(20)
  Country           String         @db.VarChar(30)
  PinCode           String         @db.VarChar(6)
  factoryUnitCode   String?        @db.VarChar(4)
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  InventoryBays     InventoryBay[]

  @@map("Inventory_units")
}

model InventoryBay {
  id               String         @id @default(uuid())
  InventoryBayId   String         @unique @db.VarChar(4)
  InventoryBayName String         @db.VarChar(30)
  StockingType     String         @db.VarChar(20)
  StreetAddress    String         @db.VarChar(50)
  City             String         @db.VarChar(30)
  Region           String         @db.VarChar(20)
  Country          String         @db.VarChar(30)
  PinCode          String         @db.VarChar(6)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  InventoryUnitId  String?        @db.VarChar(4)
  InventoryUnit    InventoryUnit? @relation(fields: [InventoryUnitId], references: [InventoryUnitId])

  @@unique([InventoryBayId, InventoryUnitId], name: "bay_unit_unique")
  @@map("Inventory_bays")
}

model SourcingTeam {
  id               String   @id @default(uuid())
  SourcingTeamId   String   @unique @db.VarChar(4)
  SourcingTeamName String   @db.VarChar(30)
  TeamType         String   @db.VarChar(20)
  CountryCode      String   @db.VarChar(5)
  PinCode          String   @db.VarChar(6)
  PhoneNumber      String   @db.VarChar(12)
  LandlineNumber   String   @db.VarChar(12)
  Email            String   @db.VarChar(20)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  sourcingUnitId   String?  @db.VarChar(4)

  @@unique([SourcingTeamId, sourcingUnitId], name: "team_unit_unique")
  @@map("sourcing_teams")
}

model SourcingUnit {
  id               String   @id @default(uuid())
  SourcingUnitId   String   @unique@db.VarChar(4)
  SourcingUnitDesc String   @db.VarChar(30)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  factoryUnitCode  String?

  @@unique([SourcingUnitId, factoryUnitCode])
  @@map("sourcing_units")
}

model ContactPerson {
  id               String   @id @default(uuid())
  CustomerId       String   @unique @db.VarChar(20)
  ContactPersonId  String   @unique @db.VarChar(20)
  FirstName        String   @db.VarChar(35)
  MiddleName       String?  @db.VarChar(35)
  LastName         String   @db.VarChar(35)
  Department       String   @db.VarChar(20)
  Function         String   @db.VarChar(30)
  Gender           String   @db.VarChar(10)
  Street1          String   @db.VarChar(50)
  Street2          String?  @db.VarChar(50)
  City             String   @db.VarChar(30)
  State            String   @db.VarChar(30)
  Region           String   @db.VarChar(50)
  Country          String   @db.VarChar(30)
  PinCode          String   @db.VarChar(6)
  BusinessUnitCode String   @db.VarChar(4)
  SalesChannelId   String   @db.VarChar(30)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model RelatedParty {
  id                String   @id
  OrderingParty     String   @db.VarChar(20)
  ReceivingParty    String   @db.VarChar(20)
  InvoicingParty    String   @db.VarChar(20)
  PayingParty       String   @db.VarChar(20)
  GroupOrganisation String   @db.VarChar(20)
  SalesPersonId     String   @unique @db.VarChar(4)
  SourcingTeamId    String   @unique @db.VarChar(4)
  ContactPersonId   String   @unique @db.VarChar(4)
  createdAt         DateTime @default(now())
  updatedAt         DateTime
}
